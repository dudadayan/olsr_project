//
// Generated file, do not edit! Created by opp_msgc 4.3 from transport/rtp/profiles/avprofile/RTPMpegPacket.msg.
//

#ifndef _RTPMPEGPACKET_M_H_
#define _RTPMPEGPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "INETDefs.h"
// }}



/**
 * Class generated from <tt>transport/rtp/profiles/avprofile/RTPMpegPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet RTPMpegPacket
 * {
 *     int headerLength = 4;
 *     int payloadLength; 
 *     int pictureType;   
 * 
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 *     
 * }
 * </pre>
 */
class RTPMpegPacket : public ::cPacket
{
  protected:
    int headerLength_var;
    int payloadLength_var;
    int pictureType_var;

  private:
    void copy(const RTPMpegPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RTPMpegPacket&);

  public:
    RTPMpegPacket(const char *name=NULL, int kind=0);
    RTPMpegPacket(const RTPMpegPacket& other);
    virtual ~RTPMpegPacket();
    RTPMpegPacket& operator=(const RTPMpegPacket& other);
    virtual RTPMpegPacket *dup() const {return new RTPMpegPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getHeaderLength() const;
    virtual void setHeaderLength(int headerLength);
    virtual int getPayloadLength() const;
    virtual void setPayloadLength(int payloadLength);
    virtual int getPictureType() const;
    virtual void setPictureType(int pictureType);
};

inline void doPacking(cCommBuffer *b, RTPMpegPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, RTPMpegPacket& obj) {obj.parsimUnpack(b);}


#endif // _RTPMPEGPACKET_M_H_
